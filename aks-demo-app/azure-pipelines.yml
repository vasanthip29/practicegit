trigger:
  - main

variables:
  IMAGE_NAME: aks-demo-app
  TAG: $(Build.BuildId)

  AKS_CLUSTER_NAME: aksDemoCluster
  AKS_RESOURCE_GROUP: demorg

stages:
  - stage: BuildAndPush
    displayName: Build and Push to ACR
    jobs:
      - job: DockerBuildPush
        displayName: Build and Push Image
        pool:
          vmImage: ubuntu-latest

        steps:
          - checkout: self

          - task: Docker@2
            displayName: Build and Push
            inputs:
              containerRegistry: 'MyACRConnection'   # ✅ ACR Service Connection name
              repository: '$(IMAGE_NAME)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: |
                $(TAG)

  - stage: DeployToAKS
    displayName: Deploy to AKS
    dependsOn: BuildAndPush
    jobs:
      - job: kubectlApply
        displayName: Deploy manifests
        pool:
          vmImage: ubuntu-latest

        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: Set AKS Context
            inputs:
              azureSubscription: 'MyAzureConnection'   # ✅ Azure Resource Manager connection
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group $(AKS_RESOURCE_GROUP) --name $(AKS_CLUSTER_NAME)

          - task: KubernetesManifest@1
            displayName: Deploy to AKS
            inputs:
              action: deploy
              kubernetesServiceConnection: 'MyAKSConnection'   # ✅ Kubernetes Service Connection name
              namespace: default
              manifests: |
                manifests/deployment.yaml
                manifests/service.yaml
              containers: |
                $(containerRegistry)/$(IMAGE_NAME):$(TAG)

